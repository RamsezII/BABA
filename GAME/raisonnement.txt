-Si il n'y rien d'autres que des objets marqués comme WIN, et des objets marqués comme YOU. 
L'euristique donne la distance de Manhattan entre le couple YOU/WIN le plus proche.

-L'execution est très lente car la plupart des taches demandent un parcours de toutes les cases, et de tous les bits de chaque cases

-grille a une dimension

-ne pas évaluer les bits non concernés accélère de beaucoup le code car ces évaluations sont généralement contenues dans des boucles imbriquées

-garder position des YOU pour que "move", appelé par "successeurs", évite de les chercher

-oublier les raisonnements de "joueur", c'est au boulot de l'IA de tenter des inputs et jauger le résultat


--  Comment jauger les états:
    -   dans le cas d'un état avec des you et des win clairs c'est l'hypothénuse de la plus courte distance de couple you/win
    -   repérer tous les mots non isolés:
        -   explorer leurs combinaisons possibles sous formes d'abre dont aucune branche ne contient
            de moment où personne n'est 'YOU' -> au moins un controllable
        -   les noter selon les hypothénuses successives des déplacements qu'ils nécessitent




-- A faire:
    - squeezer le nombre d'itérations partout où c'est possible
    - utiliser 2A* pour détecter l'isolement
    - test basiques de collision les plus évidentes permet de connaître au moins une partie des lois immutables d'un état:
        - dans un coin de map
        - en longement d'un mur sans virage?
    - un code pour générer des solutions, un autre pour les tester